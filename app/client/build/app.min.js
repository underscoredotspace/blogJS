function authService(e,t,o,n){const r="/api/user";return{login:function(t){const l={url:`${r}/login`,method:"POST",data:{code:t},headers:{"Content-Type":"application/json"}};return e(l).then(e=>(n.$broadcast("auth-status"),o.resolve(e)))},logout:function(){return t.remove("qqBlog"),e.get(`${r}/logout`).then(e=>(n.$broadcast("auth-status"),o.resolve(e)))},isLoggedIn:function(){return angular.isDefined(t.get("qqBlog"))}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),angular.module("colonApp").constant("showdown",window.showdown).constant("hljs",window.hljs),function(){function e(e,n,r,l){t(e),o(n,r,l)}function t(e){e.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/new",{templateUrl:"part/newpost.html",controller:"new",controllerAs:"vm"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/login",{templateUrl:"part/login.html",controller:"login",controllerAs:"vm"}).when("/logout",{template:"",controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup",controllerAs:"vm"}).otherwise({redirectTo:"/home"})}function o(e,t,o){t.extension("codehighlight",function(){function e(e){return e.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">")}return[{type:"output",filter:function(n,r,l){const[i,c]=["<code\\b[^>]*>","</code>"];return t.helper.replaceRecursiveRegExp(n,function(t,n,r,l){return n=e(n),`${r}${o.highlightAuto(n).value}${l}`},i,c,"g")}}]}),e.loadExtension("codehighlight")}angular.module("colonApp").config(e),e.$inject=["$routeProvider","$showdownProvider","showdown","hljs"]}(),function(){function e(e,t){const o=this;o.loggedin=t.isLoggedIn(),e.$on("auth-status",()=>{o.loggedin=t.isLoggedIn()})}angular.module("colonApp").controller("blogController",e),e.$inject=["$rootScope","authService"]}(),function(){function e(e,t){t.isLoggedIn()&&t.logout().catch(console.error),e.path("/home")}angular.module("colonApp").controller("logout",e),e.$inject=["$location","authService"]}(),function(){function e(e,t,o,n){const r=this;let l,i;if(angular.isDefined(e.id)){const o=/[0-9a-fA-F]{24}/i;o.test(e.id)?l=e.id:t.path("/home")}angular.isDefined(e.page)&&(i=Number(e.page)),n.get({id:l,page:i}).then(e=>{r.blogposts=e.posts,l||(i||(i="1"),e.more&&(r.next=Number(i)+1),Number(i)>1&&(r.prev=Number(i)-1))}).catch(e=>console.error),r.postDelete=(e=>{n.delete(e).then(()=>{r.blogposts=o("filter")(r.blogposts,{_id:"!"+e}),t.path("/home")}).catch(console.error)}),r.postEdit=(e=>{t.path(`/edit/${e}`)})}angular.module("colonApp").controller("post",e),e.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function e(e,t,o){const n=this;if(!t.isLoggedIn())return e.path("/login");n.blogpost={date:new Date},n.submitPost=(t=>{o.new(t).then(t=>e.path("/post/"+t)).catch(console.error)})}angular.module("colonApp").controller("new",e),e.$inject=["$location","authService","blogService"]}(),function(){function e(e,t,o,n){const r=this;if(!t.isLoggedIn())return n.path("/login");if(!/^[a-f\d]{24}$/i.test(o.id))return n.path("/home");const l=o.id;e.get({id:l}).then(e=>{r.blogpost=e.posts[0]}).catch(console.error),r.submitPost=(t=>{e.edit(l,t).then(e=>n.path("/post/"+e)).catch(console.error)})}angular.module("colonApp").controller("edit",e),e.$inject=["blogService","authService","$routeParams","$location"]}(),function(){function e(e,t){const o=this;if(t.isLoggedIn())return e.path("/home");o.login=function(o){t.login(o).then(()=>{e.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",e),e.$inject=["$location","authService"]}(),function(){function e(e,t){let o="/api/blog";return{get:function({id:t,page:n}={}){let r=o;return n?r+=`/${n}`:t&&(r+=`/id/${t}`),e({method:"get",url:r,headers:{"Content-Type":"application/json"}}).then(e=>e.data)},delete:function(n){if(!angular.isDefined(n))return t.reject("Post ID required");const r={method:"delete",url:`${o}/${n}`,headers:{"Content-Type":"application/json"}};return e(r)},edit:function(n,r){if(!angular.isDefined(n))return t.reject("Post ID required");if(!angular.isDefined(r))return t.reject("Edited post required");if(r.title.length<5||r.content.length<5)return t.reject("Title or content too short");const l={method:"PATCH",url:`${o}/${n}`,data:{blogpost:r},headers:{"Content-Type":"application/json"}};return e(l).then(e=>t.resolve(n))},new:function(n){return angular.isDefined(n)?n.title.length<5||n.content.length<5?t.reject("Title or content too short"):e({method:"POST",url:o,data:{blogpost:n},headers:{"Content-Type":"application/json"}}).then(e=>t.resolve(e.data.id)):t.reject("New post required")}}}angular.module("colonApp").service("blogService",e),e.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope"],function(){function e(e,t,o,n){const r=this;r.init=function(){e.printSetupCode().then(()=>r.step="1").catch(()=>o.path("/home"))},r.getQR=function(t){e.getQR(t).then(e=>{r.qr=n.trustAsHtml(e),r.step="2"}).catch(e=>console.error)},r.verify=function(t){e.verify(t).then(()=>{r.qr=void 0,r.step="3"}).catch(e=>console.error)}}angular.module("colonApp").controller("setup",e),e.$inject=["setupService","$routeParams","$location","$sce"]}(),function(){function e(e,t){const o="/api/setup";return{getQR:function(n){const r={url:`${o}/qr`,method:"POST",data:{code:n},headers:{"Content-Type":"application/json"}};return e(r).then(e=>angular.isDefined(e.data.qr)?t.resolve(e.data.qr):t.reject(0))},verify:function(t){const n={url:`${o}/verify`,method:"POST",data:{code:t},headers:{"Content-Type":"application/json"}};return e(n)},printSetupCode:function(){return e.get(`${o}/code`)}}}angular.module("colonApp").service("setupService",e),e.$inject=["$http","$q"]}(),function(){function e(e){let t;return{load:function(){if(!t)return e.reject("localStorage is not enabled");const o=localStorage.getItem("Draft"),n=JSON.parse(o);return e.resolve(n)},save:function(o){return t?(localStorage.setItem("Draft",JSON.stringify(o)),e.resolve(!0)):e.reject("localStorage is not enabled")},init:function(){try{return localStorage.setItem("test","test"),localStorage.removeItem("test"),t=!0,console.log("Drafts Service is enabled"),e.resolve(!0)}catch(t){return console.log("Drafts Service is disabled"),e.reject({localStorage:t})}},enabled:()=>t}}angular.module("colonApp").service("drafts",e),e.$inject=["$q"]}();
//# sourceMappingURL=app.min.js.map