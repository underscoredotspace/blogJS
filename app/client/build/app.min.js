function authService(t,e,o,n){const r="/api/user";return{login:function(e){const l={url:`${r}/login`,method:"POST",data:{code:e},headers:{"Content-Type":"application/json"}};return t(l).then(t=>(n.$broadcast("auth-status"),o.resolve(t)))},logout:function(){return e.remove("qqBlog"),t.get(`${r}/logout`).then(t=>(n.$broadcast("auth-status"),o.resolve(t)))},isLoggedIn:function(){return angular.isDefined(e.get("qqBlog"))}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),angular.module("colonApp").constant("showdown",window.showdown).constant("hljs",window.hljs),function(){function t(t,n,r,l){e(t),o(n,r,l)}function e(t){t.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/new",{templateUrl:"part/newpost.html",controller:"new",controllerAs:"vm"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/login",{templateUrl:"part/login.html",controller:"login",controllerAs:"vm"}).when("/logout",{template:"",controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup",controllerAs:"vm"}).otherwise({redirectTo:"/home"})}function o(t,e,o){e.extension("codehighlight",function(){function t(t){return t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">")}return[{type:"output",filter:function(n,r,l){const[i,c]=["<code\\b[^>]*>","</code>"];return e.helper.replaceRecursiveRegExp(n,function(e,n,r,l){return n=t(n),`${r}${o.highlightAuto(n).value}${l}`},i,c,"g")}}]}),t.loadExtension("codehighlight")}angular.module("colonApp").config(t),t.$inject=["$routeProvider","$showdownProvider","showdown","hljs"]}(),function(){function t(t,e){const o=this;o.loggedin=e.isLoggedIn(),t.$on("auth-status",()=>{o.loggedin=e.isLoggedIn()})}angular.module("colonApp").controller("blogController",t),t.$inject=["$rootScope","authService"]}(),function(){function t(t,e){e.isLoggedIn()&&e.logout().catch(console.error),t.path("/home")}angular.module("colonApp").controller("logout",t),t.$inject=["$location","authService"]}(),function(){function t(t,e,o,n){const r=this;let l,i;if(angular.isDefined(t.id)){const o=/[0-9a-fA-F]{24}/i;o.test(t.id)?l=t.id:e.path("/home")}angular.isDefined(t.page)&&(i=Number(t.page)),n.get({id:l,page:i}).then(t=>{r.blogposts=t.posts,l||(i||(i="1"),t.more&&(r.next=Number(i)+1),Number(i)>1&&(r.prev=Number(i)-1))}).catch(t=>console.error),r.postDelete=(t=>{n.delete(t).then(()=>{r.blogposts=o("filter")(r.blogposts,{_id:"!"+t}),e.path("/home")}).catch(console.error)}),r.postEdit=(t=>{e.path(`/edit/${t}`)})}angular.module("colonApp").controller("post",t),t.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function t(t,e,o){const n=this;if(!e.isLoggedIn())return t.path("/login");n.blogpost={date:new Date},n.submitPost=(e=>{o.new(e).then(e=>t.path("/post/"+e)).catch(console.error)})}angular.module("colonApp").controller("new",t),t.$inject=["$location","authService","blogService"]}(),function(){function t(t,e,o,n){const r=this;if(!e.isLoggedIn())return n.path("/login");if(!/^[a-f\d]{24}$/i.test(o.id))return n.path("/home");const l=o.id;t.get({id:l}).then(t=>{r.blogpost=t.posts[0]}).catch(console.error),r.submitPost=(e=>{t.edit(l,e).then(t=>n.path("/post/"+t)).catch(console.error)})}angular.module("colonApp").controller("edit",t),t.$inject=["blogService","authService","$routeParams","$location"]}(),function(){function t(t,e){const o=this;if(e.isLoggedIn())return t.path("/home");o.login=function(o){e.login(o).then(()=>{t.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",t),t.$inject=["$location","authService"]}(),function(){function t(t,e,o){let n="/api/blog";return{get:function({id:e,page:o}={}){let r=n;return o?r+=`/${o}`:e&&(r+=`/id/${e}`),t({method:"get",url:r,headers:{"Content-Type":"application/json"}}).then(t=>t.data)},delete:function(o){if(!angular.isDefined(o))return e.reject("Post ID required");const r={method:"delete",url:`${n}/${o}`,headers:{"Content-Type":"application/json"}};return t(r)},edit:function(o,r){if(!angular.isDefined(o))return e.reject("Post ID required");if(!angular.isDefined(r))return e.reject("Edited post required");if(r.title.length<5||r.content.length<5)return e.reject("Title or content too short");const l={method:"PATCH",url:`${n}/${o}`,data:{blogpost:r},headers:{"Content-Type":"application/json"}};return t(l).then(t=>e.resolve(o))},new:function(o){return angular.isDefined(o)?o.title.length<5||o.content.length<5?e.reject("Title or content too short"):t({method:"POST",url:n,data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(t=>e.resolve(t.data.id)):e.reject("New post required")}}}angular.module("colonApp").service("blogService",t),t.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope"],function(){function t(t,e,o,n){const r=this;r.init=function(){t.printSetupCode().then(()=>r.step="1").catch(()=>o.path("/home"))},r.getQR=function(e){t.getQR(e).then(t=>{r.qr=n.trustAsHtml(t),r.step="2"}).catch(t=>console.error)},r.verify=function(e){t.verify(e).then(()=>{r.qr=void 0,r.step="3"}).catch(t=>console.error)}}angular.module("colonApp").controller("setup",t),t.$inject=["setupService","$routeParams","$location","$sce"]}(),function(){function t(t,e){const o="/api/setup";return{getQR:function(n){const r={url:`${o}/qr`,method:"POST",data:{code:n},headers:{"Content-Type":"application/json"}};return t(r).then(t=>angular.isDefined(t.data.qr)?e.resolve(t.data.qr):e.reject(0))},verify:function(e){const n={url:`${o}/verify`,method:"POST",data:{code:e},headers:{"Content-Type":"application/json"}};return t(n)},printSetupCode:function(){return t.get(`${o}/code`)}}}angular.module("colonApp").service("setupService",t),t.$inject=["$http","$q"]}();
//# sourceMappingURL=app.min.js.map