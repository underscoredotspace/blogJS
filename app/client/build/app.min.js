function authService(e,t,o,n){let r=!1;return t.get("qqBlog")&&(r=!0),{login:function(t){return e({url:"/api/login",method:"POST",data:{code:t},headers:{"Content-Type":"application/json"}}).then(e=>!0===e.data.loggedin?(r=!0,n.$broadcast("auth-status"),o.resolve(e)):o.reject(e))},logout:function(){return e.get("/api/logout").then(e=>(r=!1,n.$broadcast("auth-status",r),o.resolve(e)))},isLoggedIn:function(){return r}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),angular.module("colonApp").constant("showdown",window.showdown).constant("hljs",window.hljs),function(){function e(e,n,r,l){t(e),o(n,r,l)}function t(e){e.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/new",{templateUrl:"part/newpost.html",controller:"new",controllerAs:"vm"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/login",{templateUrl:"part/login.html",controller:"login"}).when("/logout",{template:"",controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup"}).otherwise({redirectTo:"/home"})}function o(e,t,o){t.extension("codehighlight",function(){function e(e){return e.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">")}return[{type:"output",filter:function(n,r,l){const[a,i]=["<code\\b[^>]*>","</code>"];return t.helper.replaceRecursiveRegExp(n,function(t,n,r,l){return n=e(n),`${r}${o.highlightAuto(n).value}${l}`},a,i,"g")}}]}),e.loadExtension("codehighlight")}angular.module("colonApp").config(e),e.$inject=["$routeProvider","$showdownProvider","showdown","hljs"]}(),function(){function e(e){e.debugInfoEnabled(!1),e.commentDirectivesEnabled(!1)}angular.module("colonApp").config(e),e.$inject=["$compileProvider"]}(),function(){function e(e,t){const o=this;o.loggedin=t.isLoggedIn(),e.$on("auth-status",()=>{o.loggedin=t.isLoggedIn()})}angular.module("colonApp").controller("blogController",e),e.$inject=["$rootScope","authService"]}(),function(){function e(e,t){t.isLoggedIn()||e.path("/home"),t.logout().then(()=>{e.path("/home")}).catch(console.error)}angular.module("colonApp").controller("logout",e),e.$inject=["$location","authService"]}(),function(){function e(e,t,o,n){const r=this;let l;if(angular.isDefined(e.id)){const o=/[0-9a-fA-F]{24}/i;o.test(e.id)?l=e.id:t.path("/home")}n.get(l).then(e=>{r.blogposts=[],e.data.forEach((e,t)=>{r.blogposts.push(e)})}).catch(e=>console.error),r.postDelete=function(e){n.delete(e).then(()=>{r.blogposts=o("filter")(r.blogposts,{_id:"!"+e}),t.path("/home")}).catch(e=>console.error)},r.postEdit=function(e){t.path("/edit/"+e)}}angular.module("colonApp").controller("post",e),e.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function e(e,t,o,n){const r=this;o.isLoggedIn()||t.path("/login"),r.blogpost={date:new Date},r.submitPost=(e=>{n.new(e).then(e=>{t.path("/post/"+e)}).catch(e=>console.error)})}angular.module("colonApp").controller("new",e),e.$inject=["$http","$location","authService","blogService"]}(),function(){function e(e,t,o,n){const r=this;t.isLoggedIn()||n.path("/login");let l;if(angular.isDefined(o.id)){const e=/[0-9a-fA-F]{24}/i;e.test(o.id)?l=o.id:n.path("/home")}e.get(l).then(e=>{r.blogpost=e.data[0]}).catch(e=>console.error),r.submitPost=(t=>{e.edit(l,t).then(e=>{n.path("/post/"+e)}).catch(e=>console.error)})}angular.module("colonApp").controller("edit",e),e.$inject=["blogService","authService","$routeParams","$location"]}(),function(){function e(e,t,o){o.isLoggedIn()&&t.path("/home"),e.login=function(e){o.login(e).then(()=>{t.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",e),e.$inject=["$scope","$location","authService"]}(),function(){function e(e,t,o){t({url:"/api/setup/adminCode",method:"GET"}).then(function(t){e.message="Check the server console to get your setup code"},function(t){console.error(t.data),e.message="Error getting setup code."}),e.step=1,e.getQR=function(){t({url:"/api/setup/QR",method:"POST",data:{code:e.setupCode},headers:{"Content-Type":"application/json"}}).then(function(t){t.data.hasOwnProperty("qr")&&(e.qr=o.trustAsHtml(t.data.qr),e.message="Scan the QR code with Google Authenticator and input the code to verify",e.adminCode=null,e.step=2)},function(t){t.data.verified?(e.message=`You're already verified. \n                          If you lost the code in Google Authenticator, \n                          delete the admin collection in the database to start again`,e.step=0):e.message=`Error getting QR code. \n                            Restart blog on the server and \n                            come back to this page to generate a new setup code`,console.error(t.data)})},e.verify=function(){t({url:"/api/setup/verify",method:"POST",data:{code:e.gaCode},headers:{"Content-Type":"application/json"}}).then(function(t){e.$parent.blog.loggedin=!0,e.qr=null,e.message=null,e.gaCode=null,e.step=3},function(t){e.message=`Error verifying code. \n                          Try again with the next one. \n                          If this still doesn't work, delete the admin collection in the database and start again`,console.error(t.data)})}}angular.module("colonApp").controller("setup",e),e.$inject=["$scope","$http","$sce"]}(),function(){angular.module("colonApp").filter("niceDate",function(){return function(e){const t={year:"numeric",month:"long",day:"numeric"};return new Date(e).toLocaleDateString("en-GB",t)}})}(),function(){function e(e,t,o){return{get:function(t){let o;return e({method:"get",url:"/api/"+(o=t?"post/"+t:"latest/5"),headers:{"Content-Type":"application/json"}})},delete:function(o){return angular.isDefined(o)?e({method:"delete",url:"/api/post/"+o,headers:{"Content-Type":"application/json"}}):t.reject("Post ID required")},edit:function(o,n){return angular.isDefined(o)?angular.isDefined(n)?n.title.length<5||n.content.length<5?t.reject("Title or content too short"):e({method:"PATCH",url:"/api/post/"+o,data:{blogpost:n},headers:{"Content-Type":"application/json"}}).then(e=>t.resolve(e.data.id)):t.reject("Edited post required"):t.reject("Post ID required")},new:function(o){return angular.isDefined(o)?o.title.length<5||o.content.length<5?t.reject("Title or content too short"):e({method:"POST",url:"/api/post",data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(e=>t.resolve(e.data.id)):t.reject("New post required")}}}angular.module("colonApp").service("blogService",e),e.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope"];
//# sourceMappingURL=app.min.js.map