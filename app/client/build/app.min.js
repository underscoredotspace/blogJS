function authService(e,t,o,n,r){const l="/api/user";return{login:function(t){const r={url:`${l}/login`,method:"POST",data:{code:t},headers:{"Content-Type":"application/json"}};return e(r).then(e=>(n.$broadcast("auth-status"),o.resolve(e)))},logout:function(){return t.remove("qqBlog"),e.get(`${l}/logout`).then(e=>(n.$broadcast("auth-status"),o.resolve(e)))},isLoggedIn:function(){return"localhost"===r.host()||angular.isDefined(t.get("qqBlog"))}}}angular.module("colonApp",["ngRoute","ngCookies"]),angular.module("colonApp"),function(){function e(e){e.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/new",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/new/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/login",{templateUrl:"part/login.html",controller:"login",controllerAs:"vm"}).when("/logout",{template:"",controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup",controllerAs:"vm"}).otherwise({redirectTo:"/home"})}angular.module("colonApp").config(e),e.$inject=["$routeProvider"]}(),function(){function e(e,t){const o=this;o.loggedin=t.isLoggedIn(),e.$on("auth-status",()=>{o.loggedin=t.isLoggedIn()})}angular.module("colonApp").controller("blogController",e),e.$inject=["$rootScope","authService"]}(),function(){function e(e,t){t.isLoggedIn()&&t.logout().catch(console.error),e.path("/home")}angular.module("colonApp").controller("logout",e),e.$inject=["$location","authService"]}(),function(){function e(e,t,o,n){const r=this;let l,a;if(angular.isDefined(e.id)){const o=/[0-9a-fA-F]{24}/i;o.test(e.id)?l=e.id:t.path("/home")}angular.isDefined(e.page)&&(a=Number(e.page)),n.get({id:l,page:a}).then(e=>{r.blogposts=e.posts,l||(a||(a="1"),e.more&&(r.next=Number(a)+1),Number(a)>1&&(r.prev=Number(a)-1))}).catch(e=>console.error),r.postDelete=(e=>{n.delete(e).then(()=>{r.blogposts=o("filter")(r.blogposts,{_id:"!"+e}),t.path("/home")}).catch(console.error)}),r.postEdit=(e=>{t.path(`/edit/${e}`)})}angular.module("colonApp").controller("post",e),e.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function e(e,t,o,n,r,l,a){const c=this;if(!o.isLoggedIn())return l.path("/login");if(a.$watch("vm.blogpost.content",e=>{n("new",e).then(e=>{c.contentHtml=e})}),e.init().then(()=>{c.lsEnabled=!0}),c.lsSave=((t,o)=>{c.lsEnabled&&(o.$valid?e.save(t).then(e=>{t._id=e,console.log(`Draft ${e} saved`),c.saved=!0}).catch(e=>{console.error(e),c.saved=!1}):c.saved=!1)}),r.id){const o=r.id;c.submitPost=(n=>{t.edit(o,n).then(t=>{e.remove(o).catch(console.error),l.path("/post/"+t)}).catch(console.error)}),e.load(r.id).then(e=>{e||t.get({id:r.id}).then(e=>{c.blogpost=e.posts[0],c.saved=!0}).catch(console.error),c.blogpost=e,c.saved=!0}).catch(console.error)}else c.submitPost=(o=>{const n=o._id;t.new(o).then(t=>{e.remove(n).catch(console.error),l.path("/post/"+t)}).catch(console.error)}),e.list().then(t=>{c.drafts=t.filter(e=>"d-"===e._id.substr(0,2)),c.loadDraft=(t=>{e.load(t).then(e=>{c.blogpost=e,c.saved=!0}).catch(console.error)})}).catch(console.error)}angular.module("colonApp").controller("edit",e),e.$inject=["localDraft","blogService","authService","md2html","$routeParams","$location","$scope"]}(),function(){function e(e,t,o,n){const r=this;if(o.$broadcast("auth-status"),t.isLoggedIn())return e.path("/home");r.login=function(o){t.login(o).then(()=>{e.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",e),e.$inject=["$location","authService","$rootScope","localDraft"]}(),function(){function e(e,t,o){let n="/api/blog";return{get:function({id:t,page:r}={}){let l=n;return r?l+=`/${r}`:t&&(l+=`/id/${t}`),e({method:"get",url:l,headers:{"Content-Type":"application/json"}}).then(e=>(e.data.posts.forEach(e=>o(e._id,e.content).then(t=>e.contentHtml=t)),e.data))},delete:function(o){if(!angular.isDefined(o))return t.reject("Post ID required");const r={method:"delete",url:`${n}/${o}`,headers:{"Content-Type":"application/json"}};return e(r)},edit:function(o,r){if(!angular.isDefined(o))return t.reject("Post ID required");if(!angular.isDefined(r))return t.reject("Edited post required");if(r.title.length<5||r.content.length<5)return t.reject("Title or content too short");const l={method:"PATCH",url:`${n}/${o}`,data:{blogpost:r},headers:{"Content-Type":"application/json"}};return e(l).then(e=>t.resolve(o))},new:function(o){return angular.isDefined(o)?o.title.length<5||o.content.length<5?t.reject("Title or content too short"):e({method:"POST",url:n,data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(e=>t.resolve(e.data.id)):t.reject("New post required")}}}angular.module("colonApp").service("blogService",e),e.$inject=["$http","$q","md2html"]}(),function(){function e(e,t){const o=new Worker("md2html-Worker.min.js");return(n,r)=>e((e,l)=>{o.postMessage({id:n,md:r}),o.addEventListener("message",o=>{if(o.data.id===n){const n=t.trustAsHtml(o.data.html);e(n)}})})}angular.module("colonApp").service("md2html",e),e.$inject=["$q","$sce"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope","$location"],function(){function e(e,t,o,n){const r=this;r.init=function(){e.printSetupCode().then(()=>r.step="1").catch(()=>o.path("/home"))},r.getQR=function(t){e.getQR(t).then(e=>{r.qr=n.trustAsHtml(e),r.step="2"}).catch(e=>console.error)},r.verify=function(t){e.verify(t).then(()=>{r.qr=void 0,r.step="3"}).catch(e=>console.error)}}angular.module("colonApp").controller("setup",e),e.$inject=["setupService","$routeParams","$location","$sce"]}(),function(){function e(e,t){const o="/api/setup";return{getQR:function(n){const r={url:`${o}/qr`,method:"POST",data:{code:n},headers:{"Content-Type":"application/json"}};return e(r).then(e=>angular.isDefined(e.data.qr)?t.resolve(e.data.qr):t.reject(0))},verify:function(t){const n={url:`${o}/verify`,method:"POST",data:{code:t},headers:{"Content-Type":"application/json"}};return e(n)},printSetupCode:function(){return e.get(`${o}/code`)}}}angular.module("colonApp").service("setupService",e),e.$inject=["$http","$q"]}(),function(){function e(e){function t(){return"d-xxxxxxxxxxxxxxxxxxxxxxxx".replace(/x/g,()=>{let e=(new Date).getTime();return e*=Math.random(),(e=Math.floor(e)%16).toString(16)})}let o;const n={load:function(t){if(!o)return e.reject("localStorage is not enabled");const n=localStorage.getItem(t),r=JSON.parse(n);return e.resolve(r)},save:function(n){if(!o)return e.reject("localStorage is not enabled");let r;r=n.hasOwnProperty("_id")?n._id:t();try{return n._id=r,localStorage.setItem(r,JSON.stringify(n)),e.resolve(r)}catch(t){return delete n._id,e.reject({localStorage:t})}},init:function(){try{return localStorage.setItem("test","test"),localStorage.removeItem("test"),o=!0,console.log("Drafts Service is enabled"),e.resolve(!0)}catch(t){return console.log("Drafts Service is disabled"),e.reject({localStorage:t})}},list:function(){if(!o)return e.reject("localStorage is not enabled");if(0===localStorage.length)return e.resolve([]);const t=[];for(let o=0;o<localStorage.length;o++){const r=localStorage.key(o);n.load(r).then(e=>t.push(e)).catch(e.reject)}return e.resolve(t)},remove:function(t){return localStorage.getItem(t)?(localStorage.removeItem(t),localStorage.getItem(t)?e.reject({localStorage:`Failed to delete ${t}`}):e.resolve(`${t} deleted`)):e.reject({localStorage:`${t} doesn't exist`})},enabled:()=>o};return n}angular.module("colonApp").service("localDraft",e),e.$inject=["$q"]}();
//# sourceMappingURL=app.min.js.map