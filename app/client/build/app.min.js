function authService(t,e,o,n){const l="/api/user";return{login:function(e){const r={url:`${l}/login`,method:"POST",data:{code:e},headers:{"Content-Type":"application/json"}};return t(r).then(t=>(n.$broadcast("auth-status"),o.resolve(t)))},logout:function(){return e.remove("qqBlog"),t.get(`${l}/logout`).then(t=>(n.$broadcast("auth-status"),o.resolve(t)))},isLoggedIn:function(){return angular.isDefined(e.get("qqBlog"))}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),angular.module("colonApp").constant("showdown",window.showdown).constant("hljs",window.hljs),function(){function t(t,n,l,r){e(t),o(n,l,r)}function e(t){t.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"vm"}).when("/new",{templateUrl:"part/newpost.html",controller:"new",controllerAs:"vm"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"vm"}).when("/login",{templateUrl:"part/login.html",controller:"login",controllerAs:"vm"}).when("/logout",{template:"",controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup"}).otherwise({redirectTo:"/home"})}function o(t,e,o){e.extension("codehighlight",function(){function t(t){return t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">")}return[{type:"output",filter:function(n,l,r){const[i,c]=["<code\\b[^>]*>","</code>"];return e.helper.replaceRecursiveRegExp(n,function(e,n,l,r){return n=t(n),`${l}${o.highlightAuto(n).value}${r}`},i,c,"g")}}]}),t.loadExtension("codehighlight")}angular.module("colonApp").config(t),t.$inject=["$routeProvider","$showdownProvider","showdown","hljs"]}(),function(){function t(t,e){const o=this;o.loggedin=e.isLoggedIn(),t.$on("auth-status",()=>{o.loggedin=e.isLoggedIn()})}angular.module("colonApp").controller("blogController",t),t.$inject=["$rootScope","authService"]}(),function(){function t(t,e){e.isLoggedIn()&&e.logout().catch(console.error),t.path("/home")}angular.module("colonApp").controller("logout",t),t.$inject=["$location","authService"]}(),function(){function t(t,e,o,n){const l=this;let r,i;if(angular.isDefined(t.id)){const o=/[0-9a-fA-F]{24}/i;o.test(t.id)?r=t.id:e.path("/home")}angular.isDefined(t.page)&&(i=Number(t.page)),l.blogposts=[],n.get({id:r,page:i}).then(t=>{for(let e of t.data)l.blogposts.push(e)}).catch(t=>console.error),l.postDelete=(t=>{n.delete(t).then(()=>{l.blogposts=o("filter")(l.blogposts,{_id:"!"+t}),e.path("/home")}).catch(console.error)}),l.postEdit=(t=>{e.path(`/edit/${t}`)})}angular.module("colonApp").controller("post",t),t.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function t(t,e,o){const n=this;e.isLoggedIn()?(n.blogpost={date:new Date},n.submitPost=(e=>{o.new(e).then(e=>{t.path("/post/"+e)}).catch(console.error)})):t.path("/login")}angular.module("colonApp").controller("new",t),t.$inject=["$location","authService","blogService"]}(),function(){function t(t,e,o,n){const l=this;if(e.isLoggedIn()){let e;const r=/^[a-f\d]{24}$/i;if(!r.test(o.id))return n.path("/home");e=o.id,t.get({id:e}).then(t=>{l.blogpost=t.data[0]}).catch(console.error),l.submitPost=(o=>{t.edit(e,o).then(t=>{n.path("/post/"+t)}).catch(console.error)})}else n.path("/login")}angular.module("colonApp").controller("edit",t),t.$inject=["blogService","authService","$routeParams","$location"]}(),function(){function t(t,e){const o=this;e.isLoggedIn()?t.path("/home"):o.login=function(o){e.login(o).then(()=>{t.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",t),t.$inject=["$location","authService"]}(),function(){function t(t,e,o){return{get:function({id:e,page:o}={}){let n="/api/blog/";return o?n+=o:e&&(n+=`id/${e}`),t({method:"get",url:n,headers:{"Content-Type":"application/json"}})},delete:function(o){return angular.isDefined(o)?t({method:"delete",url:"/api/post/"+o,headers:{"Content-Type":"application/json"}}):e.reject("Post ID required")},edit:function(o,n){return angular.isDefined(o)?angular.isDefined(n)?n.title.length<5||n.content.length<5?e.reject("Title or content too short"):t({method:"PATCH",url:"/api/post/"+o,data:{blogpost:n},headers:{"Content-Type":"application/json"}}).then(t=>e.resolve(t.data.id)):e.reject("Edited post required"):e.reject("Post ID required")},new:function(o){return angular.isDefined(o)?o.title.length<5||o.content.length<5?e.reject("Title or content too short"):t({method:"POST",url:"/api/post",data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(t=>e.resolve(t.data.id)):e.reject("New post required")}}}angular.module("colonApp").service("blogService",t),t.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope"];
//# sourceMappingURL=app.min.js.map