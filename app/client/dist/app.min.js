function authService(t,e,o,n){let r=!1;return e.get("qqBlog")&&(r=!0),{login:function(e){return t({url:"/api/login",method:"POST",data:{code:e},headers:{"Content-Type":"application/json"}}).then(t=>!0===t.data.loggedin?(r=!0,n.$broadcast("auth-status"),o.resolve(t)):o.reject(t))},logout:function(){return t.get("/api/logout").then(t=>{r=!1;n.$broadcast("auth-status",r);return o.resolve(t)})},isLoggedIn:function(){return r}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),function(){function t(t,n){e(t),o(n)}function e(t){t.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"post",controllerAs:"posts"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"post",controllerAs:"posts"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post",controllerAs:"posts"}).when("/new",{templateUrl:"part/newpost.html",controller:"new",controllerAs:"new"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit",controllerAs:"new"}).when("/login",{templateUrl:"part/login.html",controller:"login"}).when("/logout",{template:'<div class="part">Logging out...</div>',controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup"}).otherwise({redirectTo:"/home"})}function o(t){window.showdown.extension("codehighlight",function(){const t=t=>t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">");return[{type:"output",filter:function(e,o,n){var r=(e,o,n,r)=>{o=t(o);return n+window.hljs.highlightAuto(o).value+r};return window.showdown.helper.replaceRecursiveRegExp(e,r,"<code\\b[^>]*>","</code>","g")}}]}),t.loadExtension("codehighlight")}angular.module("colonApp").config(t),t.$inject=["$routeProvider","$showdownProvider"]}(),function(){function t(t){t.debugInfoEnabled(!1),t.commentDirectivesEnabled(!1)}angular.module("colonApp").config(t),t.$inject=["$compileProvider"]}(),function(){function t(t,e){const o=this;o.loggedin=e.isLoggedIn(),t.$on("auth-status",()=>{o.loggedin=e.isLoggedIn()})}angular.module("colonApp").controller("blogController",t),t.$inject=["$rootScope","authService"]}(),function(){function t(t,e){e.isLoggedIn()||t.path("/home"),e.logout().then(()=>{t.path("/home")}).catch(console.error)}angular.module("colonApp").controller("logout",t),t.$inject=["$location","authService"]}(),function(){function t(t,e,o,n){const r=this;let i;if(angular.isDefined(t.id)){const o=/[0-9a-fA-F]{24}/i;o.test(t.id)?i=t.id:e.path("/home")}n.get(i).then(t=>{r.blogposts=t.data}).catch(t=>console.error),r.postDelete=(t=>{n.delete(t).then(()=>{"/home"!==e.path()?e.path("/home"):r.blogposts=o("filter")(r.blogposts,{_id:"!"+t})}).catch(t=>console.error)}),r.postEdit=(t=>{e.path("/edit/"+t)})}angular.module("colonApp").controller("post",t),t.$inject=["$routeParams","$location","$filter","blogService"]}(),function(){function t(t,e,o,n){const r=this;o.isLoggedIn()||e.path("/login"),r.blogpost={date:new Date},r.submitPost=(t=>{n.new(t).then(t=>{e.path("/post/"+t)}).catch(t=>console.error)})}angular.module("colonApp").controller("new",t),t.$inject=["$http","$location","authService","blogService"]}(),function(){function t(t,e,o,n){const r=this;e.isLoggedIn()||n.path("/login");let i;if(angular.isDefined(o.id)){const t=/[0-9a-fA-F]{24}/i;t.test(o.id)?i=o.id:n.path("/home")}t.get(i).then(t=>{r.blogpost=t.data[0]}).catch(t=>console.error),r.submitPost=(e=>{t.edit(i,e).then(t=>{n.path("/post/"+t)}).catch(t=>console.error)})}angular.module("colonApp").controller("edit",t),t.$inject=["blogService","authService","$routeParams","$location"]}(),function(){function t(t,e,o){o.isLoggedIn()&&e.path("/home"),t.login=function(t){o.login(t).then(()=>{e.path("/home")}).catch(console.error)}}angular.module("colonApp").controller("login",t),t.$inject=["$scope","$location","authService"]}(),function(){function t(t,e,o){e({url:"/api/setup/adminCode",method:"GET"}).then(function(e){t.message="Check the server console to get your setup code"},function(e){console.error(e.data),t.message="Error getting setup code."}),t.step=1,t.getQR=function(){e({url:"/api/setup/QR",method:"POST",data:{code:t.setupCode},headers:{"Content-Type":"application/json"}}).then(function(e){e.data.hasOwnProperty("qr")&&(t.qr=o.trustAsHtml(e.data.qr),t.message="Scan the QR code with Google Authenticator and input the code to verify",t.adminCode=null,t.step=2)},function(e){e.data.verified?(t.message=`You're already verified. \n                          If you lost the code in Google Authenticator, \n                          delete the admin collection in the database to start again`,t.step=0):t.message=`Error getting QR code. \n                            Restart blog on the server and \n                            come back to this page to generate a new setup code`,console.error(e.data)})},t.verify=function(){e({url:"/api/setup/verify",method:"POST",data:{code:t.gaCode},headers:{"Content-Type":"application/json"}}).then(function(e){t.$parent.blog.loggedin=!0,t.qr=null,t.message=null,t.gaCode=null,t.step=3},function(e){t.message=`Error verifying code. \n                          Try again with the next one. \n                          If this still doesn't work, delete the admin collection in the database and start again`,console.error(e.data)})}}angular.module("colonApp").controller("setup",t),t.$inject=["$scope","$http","$sce"]}(),function(){angular.module("colonApp").filter("niceDate",function(){return function(t){var e={year:"numeric",month:"long",day:"numeric"};return new Date(t).toLocaleDateString("en-GB",e)}})}(),function(){function t(t,e,o){return{get:function(e){let o;return t({method:"get",url:"/api/"+(o=e?"post/"+e:"latest/5"),headers:{"Content-Type":"application/json"}})},delete:function(o){return angular.isDefined(o)?t({method:"delete",url:"/api/post/"+o,headers:{"Content-Type":"application/json"}}):e.reject("Post ID required")},edit:function(o,n){return angular.isDefined(o)?angular.isDefined(n)?n.title.length<5||n.content.length<5?e.reject("Title or content too short"):t({method:"PATCH",url:"/api/post/"+o,data:{blogpost:n},headers:{"Content-Type":"application/json"}}).then(t=>e.resolve(t.data.id)):e.reject("Edited post required"):e.reject("Post ID required")},new:function(o){return angular.isDefined(o)?o.title.length<5||o.content.length<5?e.reject("Title or content too short"):t({method:"POST",url:"/api/post",data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(t=>e.resolve(t.data.id)):e.reject("New post required")}}}angular.module("colonApp").service("blogService",t),t.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q","$rootScope"];
//# sourceMappingURL=app.min.js.map