function authService(t,o,e){let n=!1;return{login:function(o){return t({url:"/api/login",method:"POST",data:{code:o},headers:{"Content-Type":"application/json"}}).then(t=>!0===t.data.loggedin?(n=!0,e.resolve(t)):e.reject(t))},logout:function(){return t.get("/api/logout").then(t=>{n=!1;return e.resolve(t)})},isLoggedIn:function(){return n}}}angular.module("colonApp",["ngRoute","ngCookies","ng-showdown"]),function(){function t(t,n){o(t),e(n)}function o(t){t.when("/about",{templateUrl:"part/about.html"}).when("/home",{templateUrl:"part/posts.html",controller:"home"}).when("/home/:page",{templateUrl:"part/posts.html",controller:"home"}).when("/post/:id",{templateUrl:"part/posts.html",controller:"post"}).when("/new",{templateUrl:"part/newpost.html",controller:"new"}).when("/edit/:id",{templateUrl:"part/newpost.html",controller:"edit"}).when("/login",{templateUrl:"part/login.html",controller:"login"}).when("/logout",{template:'<div class="part">Logging out...</div>',controller:"logout"}).when("/setup/",{templateUrl:"part/setup.html",controller:"setup"}).otherwise({redirectTo:"/home"})}function e(t){window.showdown.extension("codehighlight",function(){const t=t=>t.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">");return[{type:"output",filter:function(o,e,n){var l=(o,e,n,l)=>{e=t(e);return n+window.hljs.highlightAuto(e).value+l};return window.showdown.helper.replaceRecursiveRegExp(o,l,"<code\\b[^>]*>","</code>","g")}}]}),t.loadExtension("codehighlight")}angular.module("colonApp").config(t),t.$inject=["$routeProvider","$showdownProvider"]}(),function(){function t(t){t.debugInfoEnabled(!1),t.commentDirectivesEnabled(!1)}angular.module("colonApp").config(t),t.$inject=["$compileProvider"]}(),function(){function t(t){const o=this;o.loggedin=!1,t.get("qqBlog")&&(o.loggedin=!0)}angular.module("colonApp").controller("blogController",t),t.$inject=["$cookies"]}(),function(){angular.module("colonApp").directive("blogPost",function(){function t(t,o,e){const n=this;n.postDelete=function(l){t({method:"delete",url:"/api/post/"+l,headers:{"Content-Type":"application/json"}}).then(function(t){console.log("deleted",l),n.$parent.blogposts=o("filter")(n.$parent.blogposts,{_id:"!"+l}),e.path()==="/post/"+l&&e.path("/")}).catch(function(t,o){console.log(t),console.log(o)})},n.postEdit=function(t){console.log("edit",t),e.path("/edit/"+t)}}const o={restrict:"C",controller:t,controllerAs:"vm"};return t.$inject=["$http","$filter","$location"],o})}(),function(){function t(t,o,e){t.$parent.blog.loggedin?o.get("/api/logout").then(function(o){t.$parent.blog.loggedin=!1,e.path("/home")},function(o){console.error(o),t.$parent.blog.loggedin=!1,e.path("/home")}):e.path("/home")}angular.module("colonApp").controller("logout",t),t.$inject=["$scope","$http","$location"]}(),function(){function t(t,o){o.get().then(o=>t.blogposts=o.data).catch(t=>console.error)}angular.module("colonApp").controller("home",t),t.$inject=["$scope","blogService"]}(),function(){function t(t,o,e,n,l){/[0-9a-fA-F]{24}/i.test(o.id)?l.get(o.id).then(o=>t.blogposts=o.data).catch(t=>console.error):function(o,l){t.$parent.error=o,l&&n(function(){t.$parent.error=null,e.path("/home")},3e3)}("Invalid post. Going home...",!0)}angular.module("colonApp").controller("post",t),t.$inject=["$scope","$routeParams","$location","$timeout","blogService"]}(),function(){function t(t,o,e){t.$parent.blog.loggedin?(t.blogpost={title:"",content:"",date:new Date},t.submitPost=function(){var n={title:t.blogpost.title,content:t.blogpost.content};o({url:"/api/new",method:"POST",data:{blogpost:n},headers:{"Content-Type":"application/json"}}).then(function(t){t.data.hasOwnProperty("ID")&&e.path("/post/"+t.data.ID)},function(t){console.error(t.data)})}):e.path("/login")}angular.module("colonApp").controller("new",t),t.$inject=["$scope","$http","$location"]}(),function(){function t(t,o,e,n,l){o.get(e.id,function(o,e){o?console.error(o):204===e.status?(console.info("Post doesn't exist"),n.path("/home")):t.blogpost=e[0]}),t.submitPost=function(){var o={title:t.blogpost.title,content:t.blogpost.content};l({url:"/api/post/"+e.id,method:"PATCH",data:{blogpost:o},headers:{"Content-Type":"application/json"}}).then(function(t){n.path("/post/"+e.id)},function(t){console.error(t.data)})}}angular.module("colonApp").controller("edit",t),t.$inject=["$scope","blogService","$routeParams","$location","$http"]}(),function(){function t(t,o,e){t.$parent.blog.loggedin?e.path("/home"):t.login=function(){o({url:"/api/login",method:"POST",data:{code:t.gaCode},headers:{"Content-Type":"application/json"}}).then(function(o){t.$parent.blog.loggedin=!0,e.path("/home")},function(t){console.error(t.data)})}}angular.module("colonApp").controller("login",t),t.$inject=["$scope","$http","$location"]}(),function(){function t(t,o,e){o({url:"/api/setup/adminCode",method:"GET"}).then(function(o){t.message="Check the server console to get your setup code"},function(o){console.error(o.data),t.message="Error getting setup code."}),t.step=1,t.getQR=function(){o({url:"/api/setup/QR",method:"POST",data:{code:t.setupCode},headers:{"Content-Type":"application/json"}}).then(function(o){o.data.hasOwnProperty("qr")&&(t.qr=e.trustAsHtml(o.data.qr),t.message="Scan the QR code with Google Authenticator and input the code to verify",t.adminCode=null,t.step=2)},function(o){o.data.verified?(t.message=`You're already verified. \n                          If you lost the code in Google Authenticator, \n                          delete the admin collection in the database to start again`,t.step=0):t.message=`Error getting QR code. \n                            Restart blog on the server and \n                            come back to this page to generate a new setup code`,console.error(o.data)})},t.verify=function(){o({url:"/api/setup/verify",method:"POST",data:{code:t.gaCode},headers:{"Content-Type":"application/json"}}).then(function(o){t.$parent.blog.loggedin=!0,t.qr=null,t.message=null,t.gaCode=null,t.step=3},function(o){t.message=`Error verifying code. \n                          Try again with the next one. \n                          If this still doesn't work, delete the admin collection in the database and start again`,console.error(o.data)})}}angular.module("colonApp").controller("setup",t),t.$inject=["$scope","$http","$sce"]}(),function(){angular.module("colonApp").filter("niceDate",function(){return function(t){var o={year:"numeric",month:"long",day:"numeric"};return new Date(t).toLocaleDateString("en-GB",o)}})}(),function(){function t(t,o,e){return{get:function(o){let e;return t({method:"get",url:"/api/"+(e=o?"post/"+o:"latest/5"),headers:{"Content-Type":"application/json"}})},delete:function(e){return angular.isDefined(e)?t({method:"delete",url:"/api/post/"+e,headers:{"Content-Type":"application/json"}}):o.reject("Post ID required")},edit:function(e,n){return angular.isDefined(e)?angular.isDefined(n)?n.title.length<5||n.content.length<5?o.reject("Title or content too short"):t({method:"PATCH",url:"/api/post/"+e,data:{blogpost:n},headers:{"Content-Type":"application/json"}}):o.reject("Edited post required"):o.reject("Post ID required")},new:function(){}}}angular.module("colonApp").service("blogService",t),t.$inject=["$http","$q"]}(),angular.module("colonApp").service("authService",authService),authService.$inject=["$http","$cookies","$q"];
//# sourceMappingURL=app.min.js.map